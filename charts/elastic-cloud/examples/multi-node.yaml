backups:
  enabled: false
  schedule: "0 0 * * *"
  aws:
    accessKey: 
    secretKey:

kibana:
  enabled: true
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: # <ingress class>
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host: # <host>
        paths:
          - /
    tls:
      - hosts:
        - # <host>
  spec:
    version: 6.8.0
    count: 1
    elasticsearchRef:
      name: elasticsearch

elasticsearch:
  spec:
    version: 6.8.0
    nodeSets:
    - name: master
      count: 3
      config:
        node.master: true
        node.data: false
        node.ingest: false
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                cpu: "100m"
                memory: "2Gi"
              limits:
                cpu: "1000m"
                memory: "4Gi"
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          # Uncomment for backups
          # - name: install-s3-plugins
          #   command:
          #   - sh
          #   - -c
          #   - |
          #     bin/elasticsearch-plugin install --batch repository-s3
          # - name: "add-aws-keys"
          #   env:
          #   - name: AWS_ACCESS_KEY_ID
          #     valueFrom:
          #       secretKeyRef:
          #         name: aws
          #         key: accessKey
          #   - name: AWS_SECRET_ACCESS_KEY
          #     valueFrom:
          #         secretKeyRef:
          #           name: aws
          #           key: secretKey
          #   command:
          #   - sh
          #   - -c
          #   - |
          #     echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
          #     echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
          storageClassName: gp2
    - name: data
      count: 3
      config:
        node.master: false
        node.data: true
        node.ingest: true
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                cpu: "100m"
                memory: "2Gi"
              limits:
                cpu: "1000m"
                memory: "4Gi"
          initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          # Uncomment for backups
          # - name: install-s3-plugins
          #   command:
          #   - sh
          #   - -c
          #   - |
          #     bin/elasticsearch-plugin install --batch repository-s3
          # - name: "add-aws-keys"
          #   env:
          #   - name: AWS_ACCESS_KEY_ID
          #     valueFrom:
          #       secretKeyRef:
          #         name: aws
          #         key: accessKey
          #   - name: AWS_SECRET_ACCESS_KEY
          #     valueFrom:
          #         secretKeyRef:
          #           name: aws
          #           key: secretKey
          #   command:
          #   - sh
          #   - -c
          #   - |
          #     echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
          #     echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          storageClassName: gp2
